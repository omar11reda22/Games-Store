// <auto-generated />
using Games.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Games.Migrations
{
    [DbContext(typeof(Applicationcontext))]
    [Migration("20231227144337_step1")]
    partial class step1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Games.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Racing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "adventure"
                        },
                        new
                        {
                            Id = 5,
                            Name = "fighting"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Films"
                        });
                });

            modelBuilder.Entity("Games.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "bi bi-playstation",
                            Name = "playstation"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "bi bi-pc-display-horizontal",
                            Name = "PC"
                        },
                        new
                        {
                            Id = 5,
                            Icon = "bi bi-nintendo-switch",
                            Name = "Nintendo switch"
                        },
                        new
                        {
                            Id = 6,
                            Icon = "bi bi-xbox",
                            Name = "XBOX"
                        });
                });

            modelBuilder.Entity("Games.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discreption")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("categoryID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("categoryID");

                    b.ToTable("games");
                });

            modelBuilder.Entity("Games.Models.GameDevice", b =>
                {
                    b.Property<int>("gameid")
                        .HasColumnType("int");

                    b.Property<int>("deviceid")
                        .HasColumnType("int");

                    b.HasKey("gameid", "deviceid");

                    b.HasIndex("deviceid");

                    b.ToTable("gameDevices");
                });

            modelBuilder.Entity("Games.Models.Game", b =>
                {
                    b.HasOne("Games.Models.Category", "category")
                        .WithMany("games")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("Games.Models.GameDevice", b =>
                {
                    b.HasOne("Games.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("deviceid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Games.Models.Game", "game")
                        .WithMany("gamedevice")
                        .HasForeignKey("gameid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("game");
                });

            modelBuilder.Entity("Games.Models.Category", b =>
                {
                    b.Navigation("games");
                });

            modelBuilder.Entity("Games.Models.Game", b =>
                {
                    b.Navigation("gamedevice");
                });
#pragma warning restore 612, 618
        }
    }
}
